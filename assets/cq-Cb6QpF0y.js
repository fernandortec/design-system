import{r as l}from"./index-B4xtDKTc.js";function w(t){return typeof t=="object"&&t!=null&&!Array.isArray(t)}function M(t){return Object.fromEntries(Object.entries(t??{}).filter(([e,r])=>r!==void 0))}var Bt=t=>t==="base";function vt(t){return t.slice().filter(e=>!Bt(e))}function F(t){return String.fromCharCode(t+(t>25?39:97))}function It(t){let e="",r;for(r=Math.abs(t);r>52;r=r/52|0)e=F(r%52)+e;return F(r%52)+e}function Rt(t,e){let r=e.length;for(;r;)t=t*33^e.charCodeAt(--r);return t}function Et(t){return It(Rt(5381,t)>>>0)}var ct=/\s*!(important)?/i;function Tt(t){return typeof t=="string"?ct.test(t):!1}function Wt(t){return typeof t=="string"?t.replace(ct,"").trim():t}function pt(t){return typeof t=="string"?t.replaceAll(" ","_"):t}var B=t=>{const e=new Map;return(...o)=>{const n=JSON.stringify(o);if(e.has(n))return e.get(n);const a=t(...o);return e.set(n,a),a}};function j(...t){return t.filter(Boolean).reduce((r,o)=>(Object.keys(o).forEach(n=>{const a=r[n],i=o[n];w(a)&&w(i)?r[n]=j(a,i):r[n]=i}),r),{})}var Ot=t=>t!=null;function z(t,e,r={}){const{stop:o,getKey:n}=r;function a(i,s=[]){if(w(i)||Array.isArray(i)){const d={};for(const[c,p]of Object.entries(i)){const y=(n==null?void 0:n(c,p))??c,m=[...s,y];if(o!=null&&o(i,m))return e(i,s);const h=a(p,m);Ot(h)&&(d[y]=h)}return d}return e(i,s)}return a(t)}function Mt(t,e){return Array.isArray(t)?t.map(r=>e(r)):w(t)?z(t,r=>e(r)):e(t)}function jt(t,e){return t.reduce((r,o,n)=>{const a=e[n];return o!=null&&(r[a]=o),r},{})}function gt(t,e,r=!0){const{utility:o,conditions:n}=e,{hasShorthand:a,resolveShorthand:i}=o;return z(t,s=>Array.isArray(s)?jt(s,n.breakpoints.keys):s,{stop:s=>Array.isArray(s),getKey:r?s=>a?i(s):s:void 0})}var zt={shift:t=>t,finalize:t=>t,breakpoints:{keys:[]}},At=t=>typeof t=="string"?t.replaceAll(/[\n\s]+/g," "):t;function Lt(t){const{utility:e,hash:r,conditions:o=zt}=t,n=i=>[e.prefix,i].filter(Boolean).join("-"),a=(i,s)=>{let d;if(r){const c=[...o.finalize(i),s];d=n(e.toHash(c,Et))}else d=[...o.finalize(i),n(s)].join(":");return d};return B(({base:i,...s}={})=>{const d=Object.assign(s,i),c=gt(d,t),p=new Set;return z(c,(y,m)=>{const h=Tt(y);if(y==null)return;const[k,..._]=o.shift(m),P=vt(_),x=e.transform(k,Wt(At(y)));let S=a(P,x.className);h&&(S=`${S}!`),p.add(S)}),Array.from(p).join(" ")})}function Ft(...t){return t.flat().filter(e=>w(e)&&Object.keys(M(e)).length>0)}function Dt(t){function e(n){const a=Ft(...n);return a.length===1?a:a.map(i=>gt(i,t))}function r(...n){return j(...e(n))}function o(...n){return Object.assign({},...e(n))}return{mergeCss:B(r),assignCss:o}}var Vt=/([A-Z])/g,Xt=/^ms-/,Gt=B(t=>t.startsWith("--")?t:t.replace(Vt,"-$1").replace(Xt,"-ms-").toLowerCase()),Nt=["min","max","clamp","calc"],Yt=new RegExp(`^(${Nt.join("|")})\\(.*\\)`),Ht=t=>typeof t=="string"&&Yt.test(t),qt="cm,mm,Q,in,pc,pt,px,em,ex,ch,rem,lh,rlh,vw,vh,vmin,vmax,vb,vi,svw,svh,lvw,lvh,dvw,dvh,cqw,cqh,cqi,cqb,cqmin,cqmax,%",$t=`(?:${qt.split(",").join("|")})`,Kt=new RegExp(`^[+-]?[0-9]*.?[0-9]+(?:[eE][+-]?[0-9]+)?${$t}$`),Ut=t=>typeof t=="string"&&Kt.test(t),Zt=t=>typeof t=="string"&&/^var\(--.+\)$/.test(t),u={map:Mt,isCssFunction:Ht,isCssVar:Zt,isCssUnit:Ut},f=(t,e)=>{if(!(t!=null&&t.defaultValues))return e;const r=typeof t.defaultValues=="function"?t.defaultValues(e):t.defaultValues;return Object.assign({},r,M(e))};function g(t,...e){const r=Object.getOwnPropertyDescriptors(t),o=Object.keys(r),n=i=>{const s={};for(let d=0;d<i.length;d++){const c=i[d];r[c]&&(Object.defineProperty(s,c,r[c]),delete r[c])}return s},a=i=>n(Array.isArray(i)?i:o.filter(i));return e.map(a).concat(n(o))}var Jt=(...t)=>t.filter(Boolean).reduce((e,r)=>Array.from(new Set([...e,...r])),[]),mt=["htmlSize","htmlTranslate","htmlWidth","htmlHeight"];function Qt(t){return mt.includes(t)?t.replace("html","").toLowerCase():t}function O(t){return Object.fromEntries(Object.entries(t).map(([e,r])=>[Qt(e),r]))}O.keys=mt;const te="_hover,_focus,_focusWithin,_focusVisible,_disabled,_active,_visited,_target,_readOnly,_readWrite,_empty,_checked,_enabled,_expanded,_highlighted,_before,_after,_firstLetter,_firstLine,_marker,_selection,_file,_backdrop,_first,_last,_only,_even,_odd,_firstOfType,_lastOfType,_onlyOfType,_peerFocus,_peerHover,_peerActive,_peerFocusWithin,_peerFocusVisible,_peerDisabled,_peerChecked,_peerInvalid,_peerExpanded,_peerPlaceholderShown,_groupFocus,_groupHover,_groupActive,_groupFocusWithin,_groupFocusVisible,_groupDisabled,_groupChecked,_groupExpanded,_groupInvalid,_indeterminate,_required,_valid,_invalid,_autofill,_inRange,_outOfRange,_placeholder,_placeholderShown,_pressed,_selected,_default,_optional,_open,_closed,_fullscreen,_loading,_currentPage,_currentStep,_motionReduce,_motionSafe,_print,_landscape,_portrait,_dark,_light,_osDark,_osLight,_highContrast,_lessContrast,_moreContrast,_ltr,_rtl,_scrollbar,_scrollbarThumb,_scrollbarTrack,_horizontal,_vertical,_starting,sm,smOnly,smDown,md,mdOnly,mdDown,lg,lgOnly,lgDown,xl,xlOnly,xlDown,2xl,2xlOnly,2xlDown,smToMd,smToLg,smToXl,smTo2xl,mdToLg,mdToXl,mdTo2xl,lgToXl,lgTo2xl,xlTo2xl,@/xs,@/sm,@/md,@/lg,@/xl,@/2xl,@/3xl,@/4xl,@/5xl,@/6xl,@/7xl,@/8xl,base",ut=new Set(te.split(","));function D(t){return ut.has(t)||/^@|&|&$/.test(t)}const ee=/^_/,re=/&|@/;function oe(t){return t.map(e=>ut.has(e)?e.replace(ee,""):re.test(e)?`[${pt(e.trim())}]`:e)}function ne(t){return t.sort((e,r)=>{const o=D(e),n=D(r);return o&&!n?1:!o&&n?-1:0})}const ie="aspectRatio:aspect,boxDecorationBreak:decoration,zIndex:z,boxSizing:box,objectPosition:obj-pos,objectFit:obj-fit,overscrollBehavior:overscroll,overscrollBehaviorX:overscroll-x,overscrollBehaviorY:overscroll-y,position:pos/1,top:top,left:left,insetInline:inset-x/insetX,insetBlock:inset-y/insetY,inset:inset,insetBlockEnd:inset-b,insetBlockStart:inset-t,insetInlineEnd:end/insetEnd/1,insetInlineStart:start/insetStart/1,right:right,bottom:bottom,float:float,visibility:vis,display:d,hideFrom:hide,hideBelow:show,flexBasis:basis,flex:flex,flexDirection:flex/flexDir,flexGrow:grow,flexShrink:shrink,gridTemplateColumns:grid-cols,gridTemplateRows:grid-rows,gridColumn:col-span,gridRow:row-span,gridColumnStart:col-start,gridColumnEnd:col-end,gridAutoFlow:grid-flow,gridAutoColumns:auto-cols,gridAutoRows:auto-rows,gap:gap,gridGap:gap,gridRowGap:gap-x,gridColumnGap:gap-y,rowGap:gap-x,columnGap:gap-y,justifyContent:justify,alignContent:content,alignItems:items,alignSelf:self,padding:p/1,paddingLeft:pl/1,paddingRight:pr/1,paddingTop:pt/1,paddingBottom:pb/1,paddingBlock:py/1/paddingY,paddingBlockEnd:pb,paddingBlockStart:pt,paddingInline:px/paddingX/1,paddingInlineEnd:pe/1/paddingEnd,paddingInlineStart:ps/1/paddingStart,marginLeft:ml/1,marginRight:mr/1,marginTop:mt/1,marginBottom:mb/1,margin:m/1,marginBlock:my/1/marginY,marginBlockEnd:mb,marginBlockStart:mt,marginInline:mx/1/marginX,marginInlineEnd:me/1/marginEnd,marginInlineStart:ms/1/marginStart,spaceX:space-x,spaceY:space-y,outlineWidth:ring-width/ringWidth,outlineColor:ring-color/ringColor,outline:ring/1,outlineOffset:ring-offset/ringOffset,divideX:divide-x,divideY:divide-y,divideColor:divide-color,divideStyle:divide-style,width:w/1,inlineSize:w,minWidth:min-w/minW,minInlineSize:min-w,maxWidth:max-w/maxW,maxInlineSize:max-w,height:h/1,blockSize:h,minHeight:min-h/minH,minBlockSize:min-h,maxHeight:max-h/maxH,maxBlockSize:max-b,color:text,fontFamily:font,fontSize:fs,fontWeight:fw,fontSmoothing:smoothing,fontVariantNumeric:numeric,letterSpacing:tracking,lineHeight:leading,textAlign:text-align,textDecoration:text-decor,textDecorationColor:text-decor-color,textEmphasisColor:text-emphasis-color,textDecorationStyle:decoration-style,textDecorationThickness:decoration-thickness,textUnderlineOffset:underline-offset,textTransform:text-transform,textIndent:indent,textShadow:text-shadow,textShadowColor:text-shadow/textShadowColor,textOverflow:text-overflow,verticalAlign:v-align,wordBreak:break,textWrap:text-wrap,truncate:truncate,lineClamp:clamp,listStyleType:list-type,listStylePosition:list-pos,listStyleImage:list-img,backgroundPosition:bg-pos/bgPosition,backgroundPositionX:bg-pos-x/bgPositionX,backgroundPositionY:bg-pos-y/bgPositionY,backgroundAttachment:bg-attach/bgAttachment,backgroundClip:bg-clip/bgClip,background:bg/1,backgroundColor:bg/bgColor,backgroundOrigin:bg-origin/bgOrigin,backgroundImage:bg-img/bgImage,backgroundRepeat:bg-repeat/bgRepeat,backgroundBlendMode:bg-blend/bgBlendMode,backgroundSize:bg-size/bgSize,backgroundGradient:bg-gradient/bgGradient,textGradient:text-gradient,gradientFromPosition:gradient-from-pos,gradientToPosition:gradient-to-pos,gradientFrom:gradient-from,gradientTo:gradient-to,gradientVia:gradient-via,gradientViaPosition:gradient-via-pos,borderRadius:rounded/1,borderTopLeftRadius:rounded-tl/roundedTopLeft,borderTopRightRadius:rounded-tr/roundedTopRight,borderBottomRightRadius:rounded-br/roundedBottomRight,borderBottomLeftRadius:rounded-bl/roundedBottomLeft,borderTopRadius:rounded-t/roundedTop,borderRightRadius:rounded-r/roundedRight,borderBottomRadius:rounded-b/roundedBottom,borderLeftRadius:rounded-l/roundedLeft,borderStartStartRadius:rounded-ss/roundedStartStart,borderStartEndRadius:rounded-se/roundedStartEnd,borderStartRadius:rounded-s/roundedStart,borderEndStartRadius:rounded-es/roundedEndStart,borderEndEndRadius:rounded-ee/roundedEndEnd,borderEndRadius:rounded-e/roundedEnd,border:border,borderWidth:border-w,borderTopWidth:border-tw,borderLeftWidth:border-lw,borderRightWidth:border-rw,borderBottomWidth:border-bw,borderColor:border,borderInline:border-x/borderX,borderInlineWidth:border-x/borderXWidth,borderInlineColor:border-x/borderXColor,borderBlock:border-y/borderY,borderBlockWidth:border-y/borderYWidth,borderBlockColor:border-y/borderYColor,borderLeft:border-l,borderLeftColor:border-l,borderInlineStart:border-s/borderStart,borderInlineStartWidth:border-s/borderStartWidth,borderInlineStartColor:border-s/borderStartColor,borderRight:border-r,borderRightColor:border-r,borderInlineEnd:border-e/borderEnd,borderInlineEndWidth:border-e/borderEndWidth,borderInlineEndColor:border-e/borderEndColor,borderTop:border-t,borderTopColor:border-t,borderBottom:border-b,borderBottomColor:border-b,borderBlockEnd:border-be,borderBlockEndColor:border-be,borderBlockStart:border-bs,borderBlockStartColor:border-bs,boxShadow:shadow/1,boxShadowColor:shadow-color/shadowColor,mixBlendMode:mix-blend,filter:filter,brightness:brightness,contrast:contrast,grayscale:grayscale,hueRotate:hue-rotate,invert:invert,saturate:saturate,sepia:sepia,dropShadow:drop-shadow,blur:blur,backdropFilter:backdrop,backdropBlur:backdrop-blur,backdropBrightness:backdrop-brightness,backdropContrast:backdrop-contrast,backdropGrayscale:backdrop-grayscale,backdropHueRotate:backdrop-hue-rotate,backdropInvert:backdrop-invert,backdropOpacity:backdrop-opacity,backdropSaturate:backdrop-saturate,backdropSepia:backdrop-sepia,borderCollapse:border,borderSpacing:border-spacing,borderSpacingX:border-spacing-x,borderSpacingY:border-spacing-y,tableLayout:table,transitionTimingFunction:ease,transitionDelay:delay,transitionDuration:duration,transitionProperty:transition-prop,transition:transition,animation:animation,animationName:animation-name,animationTimingFunction:animation-ease,animationDuration:animation-duration,animationDelay:animation-delay,transformOrigin:origin,rotate:rotate,rotateX:rotate-x,rotateY:rotate-y,rotateZ:rotate-z,scale:scale,scaleX:scale-x,scaleY:scale-y,translate:translate,translateX:translate-x/x,translateY:translate-y/y,translateZ:translate-z/z,accentColor:accent,caretColor:caret,scrollBehavior:scroll,scrollbar:scrollbar,scrollMargin:scroll-m,scrollMarginLeft:scroll-ml,scrollMarginRight:scroll-mr,scrollMarginTop:scroll-mt,scrollMarginBottom:scroll-mb,scrollMarginBlock:scroll-my/scrollMarginY,scrollMarginBlockEnd:scroll-mb,scrollMarginBlockStart:scroll-mt,scrollMarginInline:scroll-mx/scrollMarginX,scrollMarginInlineEnd:scroll-me,scrollMarginInlineStart:scroll-ms,scrollPadding:scroll-p,scrollPaddingBlock:scroll-pb/scrollPaddingY,scrollPaddingBlockStart:scroll-pt,scrollPaddingBlockEnd:scroll-pb,scrollPaddingInline:scroll-px/scrollPaddingX,scrollPaddingInlineEnd:scroll-pe,scrollPaddingInlineStart:scroll-ps,scrollPaddingLeft:scroll-pl,scrollPaddingRight:scroll-pr,scrollPaddingTop:scroll-pt,scrollPaddingBottom:scroll-pb,scrollSnapAlign:snap-align,scrollSnapStop:snap-stop,scrollSnapType:snap-type,scrollSnapStrictness:snap-strictness,scrollSnapMargin:snap-m,scrollSnapMarginTop:snap-mt,scrollSnapMarginBottom:snap-mb,scrollSnapMarginLeft:snap-ml,scrollSnapMarginRight:snap-mr,touchAction:touch,userSelect:select,fill:fill,stroke:stroke,strokeWidth:stroke-w,srOnly:sr,debug:debug,appearance:appearance,backfaceVisibility:backface,clipPath:clip-path,hyphens:hyphens,mask:mask,maskImage:mask-image,maskSize:mask-size,textSizeAdjust:text-adjust,container:cq,containerName:cq-name,containerType:cq-type,textStyle:textStyle",ft=new Map,bt=new Map;ie.split(",").forEach(t=>{const[e,r]=t.split(":"),[o,...n]=r.split("/");ft.set(e,o),n.length&&n.forEach(a=>{bt.set(a==="1"?o:a,e)})});const V=t=>bt.get(t)||t,ht={conditions:{shift:ne,finalize:oe,breakpoints:{keys:["base","sm","md","lg","xl","2xl"]}},utility:{transform:(t,e)=>{const r=V(t);return{className:`${ft.get(r)||Gt(r)}_${pt(e)}`}},hasShorthand:!0,toHash:(t,e)=>e(t.join(":")),resolveShorthand:V}},ae=Lt(ht),v=(...t)=>ae(C(...t));v.raw=(...t)=>C(...t);const{mergeCss:C,assignCss:ar}=Dt(ht);function X(){let t="",e=0,r;for(;e<arguments.length;)(r=arguments[e++])&&typeof r=="string"&&(t&&(t+=" "),t+=r);return t}const G=t=>({base:{},variants:{},defaultVariants:{},compoundVariants:[],...t});function yt(t){const{base:e,variants:r,defaultVariants:o,compoundVariants:n}=G(t),a=m=>({...o,...M(m)});function i(m={}){var P;const h=a(m);let k={...e};for(const[x,S]of Object.entries(h))(P=r[x])!=null&&P[S]&&(k=C(k,r[x][S]));const _=se(n,h);return C(k,_)}function s(m){const h=G(m.config),k=Jt(m.variantKeys,Object.keys(r));return yt({base:C(e,h.base),variants:Object.fromEntries(k.map(_=>[_,C(r[_],h.variants[_])])),defaultVariants:j(o,h.defaultVariants),compoundVariants:[...n,...h.compoundVariants]})}function d(m){return v(i(m))}const c=Object.keys(r);function p(m){return g(m,c)}const y=Object.fromEntries(Object.entries(r).map(([m,h])=>[m,Object.keys(h)]));return Object.assign(B(d),{__cva__:!0,variantMap:y,variantKeys:c,raw:i,config:t,merge:s,splitVariantProps:p,getVariantProps:a})}function se(t,e){let r={};return t.forEach(o=>{Object.entries(o).every(([a,i])=>a==="css"?!0:(Array.isArray(i)?i:[i]).some(d=>e[a]===d))&&(r=C(r,o.css))}),r}var le="css,pos,insetX,insetY,insetEnd,end,insetStart,start,flexDir,p,pl,pr,pt,pb,py,paddingY,paddingX,px,pe,paddingEnd,ps,paddingStart,ml,mr,mt,mb,m,my,marginY,mx,marginX,me,marginEnd,ms,marginStart,ringWidth,ringColor,ring,ringOffset,w,minW,maxW,h,minH,maxH,textShadowColor,bgPosition,bgPositionX,bgPositionY,bgAttachment,bgClip,bg,bgColor,bgOrigin,bgImage,bgRepeat,bgBlendMode,bgSize,bgGradient,rounded,roundedTopLeft,roundedTopRight,roundedBottomRight,roundedBottomLeft,roundedTop,roundedRight,roundedBottom,roundedLeft,roundedStartStart,roundedStartEnd,roundedStart,roundedEndStart,roundedEndEnd,roundedEnd,borderX,borderXWidth,borderXColor,borderY,borderYWidth,borderYColor,borderStart,borderStartWidth,borderStartColor,borderEnd,borderEndWidth,borderEndColor,shadow,shadowColor,x,y,z,scrollMarginY,scrollMarginX,scrollPaddingY,scrollPaddingX,aspectRatio,boxDecorationBreak,zIndex,boxSizing,objectPosition,objectFit,overscrollBehavior,overscrollBehaviorX,overscrollBehaviorY,position,top,left,insetInline,insetBlock,inset,insetBlockEnd,insetBlockStart,insetInlineEnd,insetInlineStart,right,bottom,float,visibility,display,hideFrom,hideBelow,flexBasis,flex,flexDirection,flexGrow,flexShrink,gridTemplateColumns,gridTemplateRows,gridColumn,gridRow,gridColumnStart,gridColumnEnd,gridAutoFlow,gridAutoColumns,gridAutoRows,gap,gridGap,gridRowGap,gridColumnGap,rowGap,columnGap,justifyContent,alignContent,alignItems,alignSelf,padding,paddingLeft,paddingRight,paddingTop,paddingBottom,paddingBlock,paddingBlockEnd,paddingBlockStart,paddingInline,paddingInlineEnd,paddingInlineStart,marginLeft,marginRight,marginTop,marginBottom,margin,marginBlock,marginBlockEnd,marginBlockStart,marginInline,marginInlineEnd,marginInlineStart,spaceX,spaceY,outlineWidth,outlineColor,outline,outlineOffset,divideX,divideY,divideColor,divideStyle,width,inlineSize,minWidth,minInlineSize,maxWidth,maxInlineSize,height,blockSize,minHeight,minBlockSize,maxHeight,maxBlockSize,color,fontFamily,fontSize,fontWeight,fontSmoothing,fontVariantNumeric,letterSpacing,lineHeight,textAlign,textDecoration,textDecorationColor,textEmphasisColor,textDecorationStyle,textDecorationThickness,textUnderlineOffset,textTransform,textIndent,textShadow,textOverflow,verticalAlign,wordBreak,textWrap,truncate,lineClamp,listStyleType,listStylePosition,listStyleImage,backgroundPosition,backgroundPositionX,backgroundPositionY,backgroundAttachment,backgroundClip,background,backgroundColor,backgroundOrigin,backgroundImage,backgroundRepeat,backgroundBlendMode,backgroundSize,backgroundGradient,textGradient,gradientFromPosition,gradientToPosition,gradientFrom,gradientTo,gradientVia,gradientViaPosition,borderRadius,borderTopLeftRadius,borderTopRightRadius,borderBottomRightRadius,borderBottomLeftRadius,borderTopRadius,borderRightRadius,borderBottomRadius,borderLeftRadius,borderStartStartRadius,borderStartEndRadius,borderStartRadius,borderEndStartRadius,borderEndEndRadius,borderEndRadius,border,borderWidth,borderTopWidth,borderLeftWidth,borderRightWidth,borderBottomWidth,borderColor,borderInline,borderInlineWidth,borderInlineColor,borderBlock,borderBlockWidth,borderBlockColor,borderLeft,borderLeftColor,borderInlineStart,borderInlineStartWidth,borderInlineStartColor,borderRight,borderRightColor,borderInlineEnd,borderInlineEndWidth,borderInlineEndColor,borderTop,borderTopColor,borderBottom,borderBottomColor,borderBlockEnd,borderBlockEndColor,borderBlockStart,borderBlockStartColor,opacity,boxShadow,boxShadowColor,mixBlendMode,filter,brightness,contrast,grayscale,hueRotate,invert,saturate,sepia,dropShadow,blur,backdropFilter,backdropBlur,backdropBrightness,backdropContrast,backdropGrayscale,backdropHueRotate,backdropInvert,backdropOpacity,backdropSaturate,backdropSepia,borderCollapse,borderSpacing,borderSpacingX,borderSpacingY,tableLayout,transitionTimingFunction,transitionDelay,transitionDuration,transitionProperty,transition,animation,animationName,animationTimingFunction,animationDuration,animationDelay,transformOrigin,rotate,rotateX,rotateY,rotateZ,scale,scaleX,scaleY,translate,translateX,translateY,translateZ,accentColor,caretColor,scrollBehavior,scrollbar,scrollMargin,scrollMarginLeft,scrollMarginRight,scrollMarginTop,scrollMarginBottom,scrollMarginBlock,scrollMarginBlockEnd,scrollMarginBlockStart,scrollMarginInline,scrollMarginInlineEnd,scrollMarginInlineStart,scrollPadding,scrollPaddingBlock,scrollPaddingBlockStart,scrollPaddingBlockEnd,scrollPaddingInline,scrollPaddingInlineEnd,scrollPaddingInlineStart,scrollPaddingLeft,scrollPaddingRight,scrollPaddingTop,scrollPaddingBottom,scrollSnapAlign,scrollSnapStop,scrollSnapType,scrollSnapStrictness,scrollSnapMargin,scrollSnapMarginTop,scrollSnapMarginBottom,scrollSnapMarginLeft,scrollSnapMarginRight,touchAction,userSelect,fill,stroke,strokeWidth,srOnly,debug,appearance,backfaceVisibility,clipPath,hyphens,mask,maskImage,maskSize,textSizeAdjust,container,containerName,containerType,colorPalette,_hover,_focus,_focusWithin,_focusVisible,_disabled,_active,_visited,_target,_readOnly,_readWrite,_empty,_checked,_enabled,_expanded,_highlighted,_before,_after,_firstLetter,_firstLine,_marker,_selection,_file,_backdrop,_first,_last,_only,_even,_odd,_firstOfType,_lastOfType,_onlyOfType,_peerFocus,_peerHover,_peerActive,_peerFocusWithin,_peerFocusVisible,_peerDisabled,_peerChecked,_peerInvalid,_peerExpanded,_peerPlaceholderShown,_groupFocus,_groupHover,_groupActive,_groupFocusWithin,_groupFocusVisible,_groupDisabled,_groupChecked,_groupExpanded,_groupInvalid,_indeterminate,_required,_valid,_invalid,_autofill,_inRange,_outOfRange,_placeholder,_placeholderShown,_pressed,_selected,_default,_optional,_open,_closed,_fullscreen,_loading,_currentPage,_currentStep,_motionReduce,_motionSafe,_print,_landscape,_portrait,_dark,_light,_osDark,_osLight,_highContrast,_lessContrast,_moreContrast,_ltr,_rtl,_scrollbar,_scrollbarThumb,_scrollbarTrack,_horizontal,_vertical,_starting,sm,smOnly,smDown,md,mdOnly,mdDown,lg,lgOnly,lgDown,xl,xlOnly,xlDown,2xl,2xlOnly,2xlDown,smToMd,smToLg,smToXl,smTo2xl,mdToLg,mdToXl,mdTo2xl,lgToXl,lgTo2xl,xlTo2xl,@/xs,@/sm,@/md,@/lg,@/xl,@/2xl,@/3xl,@/4xl,@/5xl,@/6xl,@/7xl,@/8xl,textStyle",de=le.split(","),ce="WebkitAppearance,WebkitBorderBefore,WebkitBorderBeforeColor,WebkitBorderBeforeStyle,WebkitBorderBeforeWidth,WebkitBoxReflect,WebkitLineClamp,WebkitMask,WebkitMaskAttachment,WebkitMaskClip,WebkitMaskComposite,WebkitMaskImage,WebkitMaskOrigin,WebkitMaskPosition,WebkitMaskPositionX,WebkitMaskPositionY,WebkitMaskRepeat,WebkitMaskRepeatX,WebkitMaskRepeatY,WebkitMaskSize,WebkitOverflowScrolling,WebkitTapHighlightColor,WebkitTextFillColor,WebkitTextStroke,WebkitTextStrokeColor,WebkitTextStrokeWidth,WebkitTouchCallout,WebkitUserModify,accentColor,alignContent,alignItems,alignSelf,alignTracks,all,animation,animationComposition,animationDelay,animationDirection,animationDuration,animationFillMode,animationIterationCount,animationName,animationPlayState,animationRange,animationRangeEnd,animationRangeStart,animationTimingFunction,animationTimeline,appearance,aspectRatio,azimuth,backdropFilter,backfaceVisibility,background,backgroundAttachment,backgroundBlendMode,backgroundClip,backgroundColor,backgroundImage,backgroundOrigin,backgroundPosition,backgroundPositionX,backgroundPositionY,backgroundRepeat,backgroundSize,blockSize,border,borderBlock,borderBlockColor,borderBlockStyle,borderBlockWidth,borderBlockEnd,borderBlockEndColor,borderBlockEndStyle,borderBlockEndWidth,borderBlockStart,borderBlockStartColor,borderBlockStartStyle,borderBlockStartWidth,borderBottom,borderBottomColor,borderBottomLeftRadius,borderBottomRightRadius,borderBottomStyle,borderBottomWidth,borderCollapse,borderColor,borderEndEndRadius,borderEndStartRadius,borderImage,borderImageOutset,borderImageRepeat,borderImageSlice,borderImageSource,borderImageWidth,borderInline,borderInlineEnd,borderInlineColor,borderInlineStyle,borderInlineWidth,borderInlineEndColor,borderInlineEndStyle,borderInlineEndWidth,borderInlineStart,borderInlineStartColor,borderInlineStartStyle,borderInlineStartWidth,borderLeft,borderLeftColor,borderLeftStyle,borderLeftWidth,borderRadius,borderRight,borderRightColor,borderRightStyle,borderRightWidth,borderSpacing,borderStartEndRadius,borderStartStartRadius,borderStyle,borderTop,borderTopColor,borderTopLeftRadius,borderTopRightRadius,borderTopStyle,borderTopWidth,borderWidth,bottom,boxAlign,boxDecorationBreak,boxDirection,boxFlex,boxFlexGroup,boxLines,boxOrdinalGroup,boxOrient,boxPack,boxShadow,boxSizing,breakAfter,breakBefore,breakInside,captionSide,caret,caretColor,caretShape,clear,clip,clipPath,color,colorScheme,columnCount,columnFill,columnGap,columnRule,columnRuleColor,columnRuleStyle,columnRuleWidth,columnSpan,columnWidth,columns,contain,containIntrinsicSize,containIntrinsicBlockSize,containIntrinsicHeight,containIntrinsicInlineSize,containIntrinsicWidth,container,containerName,containerType,content,contentVisibility,counterIncrement,counterReset,counterSet,cursor,direction,display,emptyCells,filter,flex,flexBasis,flexDirection,flexFlow,flexGrow,flexShrink,flexWrap,float,font,fontFamily,fontFeatureSettings,fontKerning,fontLanguageOverride,fontOpticalSizing,fontPalette,fontVariationSettings,fontSize,fontSizeAdjust,fontSmooth,fontStretch,fontStyle,fontSynthesis,fontSynthesisPosition,fontSynthesisSmallCaps,fontSynthesisStyle,fontSynthesisWeight,fontVariant,fontVariantAlternates,fontVariantCaps,fontVariantEastAsian,fontVariantEmoji,fontVariantLigatures,fontVariantNumeric,fontVariantPosition,fontWeight,forcedColorAdjust,gap,grid,gridArea,gridAutoColumns,gridAutoFlow,gridAutoRows,gridColumn,gridColumnEnd,gridColumnGap,gridColumnStart,gridGap,gridRow,gridRowEnd,gridRowGap,gridRowStart,gridTemplate,gridTemplateAreas,gridTemplateColumns,gridTemplateRows,hangingPunctuation,height,hyphenateCharacter,hyphenateLimitChars,hyphens,imageOrientation,imageRendering,imageResolution,imeMode,initialLetter,initialLetterAlign,inlineSize,inputSecurity,inset,insetBlock,insetBlockEnd,insetBlockStart,insetInline,insetInlineEnd,insetInlineStart,isolation,justifyContent,justifyItems,justifySelf,justifyTracks,left,letterSpacing,lineBreak,lineClamp,lineHeight,lineHeightStep,listStyle,listStyleImage,listStylePosition,listStyleType,margin,marginBlock,marginBlockEnd,marginBlockStart,marginBottom,marginInline,marginInlineEnd,marginInlineStart,marginLeft,marginRight,marginTop,marginTrim,mask,maskBorder,maskBorderMode,maskBorderOutset,maskBorderRepeat,maskBorderSlice,maskBorderSource,maskBorderWidth,maskClip,maskComposite,maskImage,maskMode,maskOrigin,maskPosition,maskRepeat,maskSize,maskType,masonryAutoFlow,mathDepth,mathShift,mathStyle,maxBlockSize,maxHeight,maxInlineSize,maxLines,maxWidth,minBlockSize,minHeight,minInlineSize,minWidth,mixBlendMode,objectFit,objectPosition,offset,offsetAnchor,offsetDistance,offsetPath,offsetPosition,offsetRotate,opacity,order,orphans,outline,outlineColor,outlineOffset,outlineStyle,outlineWidth,overflow,overflowAnchor,overflowBlock,overflowClipBox,overflowClipMargin,overflowInline,overflowWrap,overflowX,overflowY,overlay,overscrollBehavior,overscrollBehaviorBlock,overscrollBehaviorInline,overscrollBehaviorX,overscrollBehaviorY,padding,paddingBlock,paddingBlockEnd,paddingBlockStart,paddingBottom,paddingInline,paddingInlineEnd,paddingInlineStart,paddingLeft,paddingRight,paddingTop,page,pageBreakAfter,pageBreakBefore,pageBreakInside,paintOrder,perspective,perspectiveOrigin,placeContent,placeItems,placeSelf,pointerEvents,position,printColorAdjust,quotes,resize,right,rotate,rowGap,rubyAlign,rubyMerge,rubyPosition,scale,scrollbarColor,scrollbarGutter,scrollbarWidth,scrollBehavior,scrollMargin,scrollMarginBlock,scrollMarginBlockStart,scrollMarginBlockEnd,scrollMarginBottom,scrollMarginInline,scrollMarginInlineStart,scrollMarginInlineEnd,scrollMarginLeft,scrollMarginRight,scrollMarginTop,scrollPadding,scrollPaddingBlock,scrollPaddingBlockStart,scrollPaddingBlockEnd,scrollPaddingBottom,scrollPaddingInline,scrollPaddingInlineStart,scrollPaddingInlineEnd,scrollPaddingLeft,scrollPaddingRight,scrollPaddingTop,scrollSnapAlign,scrollSnapCoordinate,scrollSnapDestination,scrollSnapPointsX,scrollSnapPointsY,scrollSnapStop,scrollSnapType,scrollSnapTypeX,scrollSnapTypeY,scrollTimeline,scrollTimelineAxis,scrollTimelineName,shapeImageThreshold,shapeMargin,shapeOutside,tabSize,tableLayout,textAlign,textAlignLast,textCombineUpright,textDecoration,textDecorationColor,textDecorationLine,textDecorationSkip,textDecorationSkipInk,textDecorationStyle,textDecorationThickness,textEmphasis,textEmphasisColor,textEmphasisPosition,textEmphasisStyle,textIndent,textJustify,textOrientation,textOverflow,textRendering,textShadow,textSizeAdjust,textTransform,textUnderlineOffset,textUnderlinePosition,textWrap,timelineScope,top,touchAction,transform,transformBox,transformOrigin,transformStyle,transition,transitionBehavior,transitionDelay,transitionDuration,transitionProperty,transitionTimingFunction,translate,unicodeBidi,userSelect,verticalAlign,viewTimeline,viewTimelineAxis,viewTimelineInset,viewTimelineName,viewTransitionName,visibility,whiteSpace,whiteSpaceCollapse,widows,width,willChange,wordBreak,wordSpacing,wordWrap,writingMode,zIndex,zoom,alignmentBaseline,baselineShift,clipRule,colorInterpolation,colorRendering,dominantBaseline,fill,fillOpacity,fillRule,floodColor,floodOpacity,glyphOrientationVertical,lightingColor,marker,markerEnd,markerMid,markerStart,shapeRendering,stopColor,stopOpacity,stroke,strokeDasharray,strokeDashoffset,strokeLinecap,strokeLinejoin,strokeMiterlimit,strokeOpacity,strokeWidth,textAnchor,vectorEffect",pe=ce.split(",").concat(de),ge=new Map(pe.map(t=>[t,!0])),me=/&|@/,St=B(t=>ge.has(t)||t.startsWith("--")||me.test(t));const ue=(t,e)=>!e.includes(t)&&!St(t),fe=(t,e)=>t.__shouldForwardProps__&&e?r=>t.__shouldForwardProps__(r)&&e(r):e,be=(t,e)=>{var o;if(t&&!e)return t;if(!t&&e)return e;if(t.__cva__&&e.__cva__||t.__recipe__&&e.__recipe__)return t.merge(e);const r=new TypeError("Cannot merge cva with recipe. Please use either cva or recipe.");throw(o=TypeError.captureStackTrace)==null||o.call(TypeError,r),r},he=t=>typeof t=="string"?t:(t==null?void 0:t.displayName)||(t==null?void 0:t.name)||"Component";function W(t,e={},r={}){const o=e.__cva__||e.__recipe__?e:yt(e),n=r.shouldForwardProp||ue,a=m=>n(m,o.variantKeys),i=Object.assign(r.dataAttr&&e.__name__?{"data-recipe":e.__name__}:{},r.defaultProps),s=be(t.__cva__,o),d=fe(t,a),c=t.__base__||t,p=l.forwardRef(function(h,k){const{as:_=c,children:P,...x}=h,S=l.useMemo(()=>Object.assign({},i,x),[x]),[kt,_t,I,A,xt]=l.useMemo(()=>g(S,O.keys,d,s.variantKeys,St),[S]);function Ct(){var L;const{css:R,...E}=A,T=(L=s.__getCompoundVariantCss__)==null?void 0:L.call(s,I);return X(s(I,!1),v(T,E,R),S.className)}function Pt(){const{css:R,...E}=A,T=s.raw(I);return X(v(T,E,R),S.className)}const wt=e.__recipe__?Ct:Pt;return l.createElement(_,{ref:k,..._t,...xt,...O(kt),className:wt()},S.children??P)}),y=he(c);return p.displayName=`styled.${y}`,p.__cva__=s,p.__base__=c,p.__shouldForwardProps__=a,p}function ye(){const t=new Map;return new Proxy(W,{apply(e,r,o){return W(...o)},get(e,r){return t.has(r)||t.set(r,W(r)),t.get(r)}})}const b=ye(),N={transform(t){return t}},Se=(t={})=>{const e=f(N,t);return N.transform(e,u)},ke=l.forwardRef(function(e,r){const[o,n]=g(e,[]),a=Se(o),i={ref:r,...a,...n};return l.createElement(b.div,i)});ke.__docgenInfo={description:"",methods:[],displayName:"Box"};const Y={transform(t){const{direction:e,align:r,justify:o,wrap:n,basis:a,grow:i,shrink:s,...d}=t;return{display:"flex",flexDirection:e,alignItems:r,justifyContent:o,flexWrap:n,flexBasis:a,flexGrow:i,flexShrink:s,...d}}},_e=(t={})=>{const e=f(Y,t);return Y.transform(e,u)},xe=l.forwardRef(function(e,r){const[o,n]=g(e,["align","justify","direction","wrap","basis","grow","shrink"]),a=_e(o),i={ref:r,...a,...n};return l.createElement(b.div,i)});xe.__docgenInfo={description:"",methods:[],displayName:"Flex"};const H={transform(t){const{align:e,justify:r,direction:o,gap:n,...a}=t;return{display:"flex",flexDirection:o,alignItems:e,justifyContent:r,gap:n,...a}},defaultValues:{direction:"column",gap:"10px"}},Ce=(t={})=>{const e=f(H,t);return H.transform(e,u)},Pe=l.forwardRef(function(e,r){const[o,n]=g(e,["align","justify","direction","gap"]),a=Ce(o),i={ref:r,...a,...n};return l.createElement(b.div,i)});Pe.__docgenInfo={description:"",methods:[],displayName:"Stack"};const q={transform(t){const{justify:e,gap:r,...o}=t;return{display:"flex",alignItems:"center",justifyContent:e,gap:r,flexDirection:"column",...o}},defaultValues:{gap:"10px"}},we=(t={})=>{const e=f(q,t);return q.transform(e,u)},Be=l.forwardRef(function(e,r){const[o,n]=g(e,["justify","gap"]),a=we(o),i={ref:r,...a,...n};return l.createElement(b.div,i)});Be.__docgenInfo={description:"",methods:[],displayName:"VStack"};const $={transform(t){const{justify:e,gap:r,...o}=t;return{display:"flex",alignItems:"center",justifyContent:e,gap:r,flexDirection:"row",...o}},defaultValues:{gap:"10px"}},ve=(t={})=>{const e=f($,t);return $.transform(e,u)},Ie=l.forwardRef(function(e,r){const[o,n]=g(e,["justify","gap"]),a=ve(o),i={ref:r,...a,...n};return l.createElement(b.div,i)});Ie.__docgenInfo={description:"",methods:[],displayName:"HStack"};const K={transform(t,{map:e}){const{size:r,...o}=t;return{alignSelf:"stretch",justifySelf:"stretch",flex:e(r,n=>n==null?"1":`0 0 ${n}`),...o}}},Re=(t={})=>{const e=f(K,t);return K.transform(e,u)},Ee=l.forwardRef(function(e,r){const[o,n]=g(e,["size"]),a=Re(o),i={ref:r,...a,...n};return l.createElement(b.div,i)});Ee.__docgenInfo={description:"",methods:[],displayName:"Spacer"};const U={transform(t){const{size:e,...r}=t;return{display:"flex",alignItems:"center",justifyContent:"center",flex:"0 0 auto",width:e,height:e,...r}}},Te=(t={})=>{const e=f(U,t);return U.transform(e,u)},We=l.forwardRef(function(e,r){const[o,n]=g(e,["size"]),a=Te(o),i={ref:r,...a,...n};return l.createElement(b.div,i)});We.__docgenInfo={description:"",methods:[],displayName:"Square"};const Z={transform(t){const{size:e,...r}=t;return{display:"flex",alignItems:"center",justifyContent:"center",flex:"0 0 auto",width:e,height:e,borderRadius:"9999px",...r}}},Oe=(t={})=>{const e=f(Z,t);return Z.transform(e,u)},Me=l.forwardRef(function(e,r){const[o,n]=g(e,["size"]),a=Oe(o),i={ref:r,...a,...n};return l.createElement(b.div,i)});Me.__docgenInfo={description:"",methods:[],displayName:"Circle"};const J={transform(t){const{inline:e,...r}=t;return{display:e?"inline-flex":"flex",alignItems:"center",justifyContent:"center",...r}}},je=(t={})=>{const e=f(J,t);return J.transform(e,u)},ze=l.forwardRef(function(e,r){const[o,n]=g(e,["inline"]),a=je(o),i={ref:r,...a,...n};return l.createElement(b.div,i)});ze.__docgenInfo={description:"",methods:[],displayName:"Center"};const Q={transform(t){return{_before:{content:'""',position:"absolute",inset:"0",zIndex:"0",...t._before},...t}}},Ae=(t={})=>{const e=f(Q,t);return Q.transform(e,u)},Le=l.forwardRef(function(e,r){const[o,n]=g(e,[]),a=Ae(o),i={ref:r,...a,...n};return l.createElement(b.a,i)});Le.__docgenInfo={description:"",methods:[],displayName:"LinkOverlay"};const tt={transform(t,{map:e}){const{ratio:r=4/3,...o}=t;return{position:"relative",_before:{content:'""',display:"block",height:"0",paddingBottom:e(r,n=>`${1/n*100}%`)},"&>*":{display:"flex",justifyContent:"center",alignItems:"center",overflow:"hidden",position:"absolute",inset:"0",width:"100%",height:"100%"},"&>img, &>video":{objectFit:"cover"},...o}}},Fe=(t={})=>{const e=f(tt,t);return tt.transform(e,u)},De=l.forwardRef(function(e,r){const[o,n]=g(e,["ratio"]),a=Fe(o),i={ref:r,...a,...n};return l.createElement(b.div,i)});De.__docgenInfo={description:"",methods:[],displayName:"AspectRatio"};const et={transform(t,{map:e,isCssUnit:r}){const{columnGap:o,rowGap:n,gap:a,columns:i,minChildWidth:s,...d}=t,c=p=>r(p)?p:`token(sizes.${p}, ${p})`;return{display:"grid",gridTemplateColumns:i!=null?e(i,p=>`repeat(${p}, minmax(0, 1fr))`):s!=null?e(s,p=>`repeat(auto-fit, minmax(${c(p)}, 1fr))`):void 0,gap:a,columnGap:o,rowGap:n,...d}},defaultValues(t){return{gap:t.columnGap||t.rowGap?void 0:"10px"}}},Ve=(t={})=>{const e=f(et,t);return et.transform(e,u)},Xe=l.forwardRef(function(e,r){const[o,n]=g(e,["gap","columnGap","rowGap","columns","minChildWidth"]),a=Ve(o),i={ref:r,...a,...n};return l.createElement(b.div,i)});Xe.__docgenInfo={description:"",methods:[],displayName:"Grid"};const rt={transform(t,{map:e}){const{colSpan:r,rowSpan:o,colStart:n,rowStart:a,colEnd:i,rowEnd:s,...d}=t,c=p=>p==="auto"?p:`span ${p}`;return{gridColumn:r!=null?e(r,c):void 0,gridRow:o!=null?e(o,c):void 0,gridColumnStart:n,gridColumnEnd:i,gridRowStart:a,gridRowEnd:s,...d}}},Ge=(t={})=>{const e=f(rt,t);return rt.transform(e,u)},Ne=l.forwardRef(function(e,r){const[o,n]=g(e,["colSpan","rowSpan","colStart","rowStart","colEnd","rowEnd"]),a=Ge(o),i={ref:r,...a,...n};return l.createElement(b.div,i)});Ne.__docgenInfo={description:"",methods:[],displayName:"GridItem"};const ot={transform(t){const{columnGap:e,rowGap:r,gap:o=e||r?void 0:"10px",align:n,justify:a,...i}=t;return{display:"flex",flexWrap:"wrap",alignItems:n,justifyContent:a,gap:o,columnGap:e,rowGap:r,...i}}},Ye=(t={})=>{const e=f(ot,t);return ot.transform(e,u)},He=l.forwardRef(function(e,r){const[o,n]=g(e,["gap","rowGap","columnGap","align","justify"]),a=Ye(o),i={ref:r,...a,...n};return l.createElement(b.div,i)});He.__docgenInfo={description:"",methods:[],displayName:"Wrap"};const nt={transform(t){return{position:"relative",maxWidth:"8xl",mx:"auto",px:{base:"4",md:"6",lg:"8"},...t}}},qe=(t={})=>{const e=f(nt,t);return nt.transform(e,u)},$e=l.forwardRef(function(e,r){const[o,n]=g(e,[]),a=qe(o),i={ref:r,...a,...n};return l.createElement(b.div,i)});$e.__docgenInfo={description:"",methods:[],displayName:"Container"};const it={transform(t,{map:e}){const{orientation:r,thickness:o,color:n,...a}=t;return{"--thickness":o,width:e(r,i=>i==="vertical"?void 0:"100%"),height:e(r,i=>i==="horizontal"?void 0:"100%"),borderBlockEndWidth:e(r,i=>i==="horizontal"?"var(--thickness)":void 0),borderInlineEndWidth:e(r,i=>i==="vertical"?"var(--thickness)":void 0),borderColor:n,...a}},defaultValues:{orientation:"horizontal",thickness:"1px"}},Ke=(t={})=>{const e=f(it,t);return it.transform(e,u)},Ue=l.forwardRef(function(e,r){const[o,n]=g(e,["orientation","thickness","color"]),a=Ke(o),i={ref:r,...a,...n};return l.createElement(b.div,i)});Ue.__docgenInfo={description:"",methods:[],displayName:"Divider"};const at={transform(t,{map:e}){const{offset:r,offsetX:o,offsetY:n,placement:a,...i}=t;return{display:"inline-flex",justifyContent:"center",alignItems:"center",position:"absolute",insetBlockStart:e(a,s=>{const[d]=s.split("-");return{top:n,middle:"50%",bottom:"auto"}[d]}),insetBlockEnd:e(a,s=>{const[d]=s.split("-");return{top:"auto",middle:"50%",bottom:n}[d]}),insetInlineStart:e(a,s=>{const[,d]=s.split("-");return{start:o,center:"50%",end:"auto"}[d]}),insetInlineEnd:e(a,s=>{const[,d]=s.split("-");return{start:"auto",center:"50%",end:o}[d]}),translate:e(a,s=>{const[d,c]=s.split("-"),p={start:"-50%",center:"-50%",end:"50%"},y={top:"-50%",middle:"-50%",bottom:"50%"};return`${p[c]} ${y[d]}`}),...i}},defaultValues(t){const e=t.offset||"0";return{offset:e,offsetX:e,offsetY:e,placement:"top-end"}}},Ze=(t={})=>{const e=f(at,t);return at.transform(e,u)},Je=l.forwardRef(function(e,r){const[o,n]=g(e,["offsetX","offsetY","offset","placement"]),a=Ze(o),i={ref:r,...a,...n};return l.createElement(b.div,i)});Je.__docgenInfo={description:"",methods:[],displayName:"Float"};const st={transform(t,{map:e,isCssUnit:r,isCssVar:o}){const{inline:n,block:a,...i}=t,s=d=>r(d)||o(d)?d:`token(spacing.${d}, ${d})`;return{"--bleed-x":e(n,s),"--bleed-y":e(a,s),marginInline:"calc(var(--bleed-x, 0) * -1)",marginBlock:"calc(var(--bleed-y, 0) * -1)",...i}},defaultValues:{inline:"0",block:"0"}},Qe=(t={})=>{const e=f(st,t);return st.transform(e,u)},tr=l.forwardRef(function(e,r){const[o,n]=g(e,["inline","block"]),a=Qe(o),i={ref:r,...a,...n};return l.createElement(b.div,i)});tr.__docgenInfo={description:"",methods:[],displayName:"Bleed"};const lt={transform(t){return{srOnly:!0,...t}}},er=(t={})=>{const e=f(lt,t);return lt.transform(e,u)},rr=l.forwardRef(function(e,r){const[o,n]=g(e,[]),a=er(o),i={ref:r,...a,...n};return l.createElement(b.div,i)});rr.__docgenInfo={description:"",methods:[],displayName:"VisuallyHidden"};const dt={transform(t){const{name:e,type:r,...o}=t;return{containerType:r,containerName:e,...o}},defaultValues:{type:"inline-size"}},or=(t={})=>{const e=f(dt,t);return dt.transform(e,u)},nr=l.forwardRef(function(e,r){const[o,n]=g(e,["name","type"]),a=or(o),i={ref:r,...a,...n};return l.createElement(b.div,i)});nr.__docgenInfo={description:"",methods:[],displayName:"Cq"};export{ke as B,b as s};
